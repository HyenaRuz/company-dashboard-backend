generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                        Int           @id() @default(autoincrement())
  createdAt                 DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt                 DateTime      @updatedAt
  deletedAt                 DateTime?     @db.Timestamptz(6)
  email                     String        @unique
  hashedPassword            String
  username                  String
  avatarUrl                 String? 
  role                      String        @default("user")
  companies                 Company[] 
  actingHistories           History[]     @relation("ActingAccount")
  targetHistories           History[]     @relation("TargetAccount")
  historyLogs               History[]
}

model Company {
  id                        Int           @id() @default(autoincrement())
  createdAt                 DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt                 DateTime      @updatedAt
  deletedAt                 DateTime?     @db.Timestamptz(6)
  name                      String
  service                   String
  capital                   Float
  logoUrl                   String?
  accountId                 Int
  account                   Account        @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  historyLogs               History[]
}

model History {
  id                        Int           @id() @default(autoincrement())
  createdAt                 DateTime      @default(now()) @db.Timestamptz(6)

  actingAccountId           Int
  targetAccountId           Int?

  objectCompanyId           Int?
  objectAccountId           Int?

  objectType                String
  ip                        String

  actingAccount             Account       @relation("ActingAccount", fields: [actingAccountId], references: [id])
  targetAccount             Account?      @relation("TargetAccount", fields: [targetAccountId], references: [id])

  objectCompany             Company?      @relation(fields: [objectCompanyId], references: [id])
  objectAccount             Account?      @relation(fields: [objectAccountId], references: [id])
}
